name: ci

on:
  push:
    branches: ["master", "dev"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Intall Deno
        uses: denoland/setup-deno@v2

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - if: runner.os == 'Linux'
        name: Run docs lint
        run: deno doc --lint mod.ts

      - if: runner.os == 'Linux'
        name: Run tests Linux
        run: export CARGO_TARGET_DIR=target && export RUST_LIB_PATH=$CARGO_TARGET_DIR/debug && deno task build && deno task test:rust -- --nocapture && mv $CARGO_TARGET_DIR/debug/libpty.so $CARGO_TARGET_DIR/debug/libpty_$(uname -m).so && deno test -A

      - if: runner.os == 'macOS'
        name: Run tests MacOs
        run: export CARGO_TARGET_DIR=target && export RUST_LIB_PATH=$CARGO_TARGET_DIR/debug && deno task build && deno task test:rust -- --nocapture && mv $CARGO_TARGET_DIR/debug/libpty.dylib $CARGO_TARGET_DIR/debug/libpty_$(uname -m).dylib && deno test -A

      - if: runner.os == 'Windows'
        name: Run tests Windows
        run: $env:CARGO_TARGET_DIR='target'; deno task test -- --nocapture
